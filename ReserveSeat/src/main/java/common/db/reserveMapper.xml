<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reserve">

    <!-- 특정 사용자가 예약한 좌석 목록 -->
    <select id="getReservationsByUserId" parameterType="int" resultType="kr.ac.kopo.vo.ReservationVO">
        SELECT 
            r.reservation_id AS reservationId,
            r.seat_id AS seatId,
            r.reservation_time AS reservationTime,
            r.status AS reservationStatus,
            s.room_id AS roomId,
            s.row_number AS rowNumber,
            s.column_number AS columnNumber,
            s.status AS seatStatus,
            c.name AS className
        FROM rs_reservation r
        JOIN rs_seat s ON r.seat_id = s.seat_id
        JOIN rs_classroom c ON s.room_id = c.room_id
        WHERE r.user_id = #{userId}
        ORDER BY r.reservation_time DESC
    </select>

    <!-- 예약 삽입 -->
    <insert id="insertReserve" parameterType="map" useGeneratedKeys="true" keyProperty="reservationId">
        INSERT INTO rs_reservation (
            reservation_id, 
            seat_id, 
            user_id, 
            reservation_time, 
            status
        )
        VALUES (
            #{reservationId},  -- 예약 고유 ID
            #{seatId},         -- 좌석 ID
            #{userId},         -- 사용자 ID
            CURRENT_TIMESTAMP,                 -- 예약 시간
            #{status, jdbcType=VARCHAR}        -- 예약 상태 (active, cancelled)
        )
    </insert>

       <!-- 예약 취소 -->
    <update id="cancelReservation" parameterType="map">
        UPDATE rs_reservation
        SET status = 'cancelled'
        WHERE reservation_id = #{reservationId} AND user_id = #{userId};
    </update>

    <!-- 특정 사용자 예약 조회 -->
    <select id="getUserReservations" parameterType="map" resultType="kr.ac.kopo.vo.ReservationVO">
        SELECT 
            r.reservation_id AS reservationId,
            r.seat_id AS seatId,
            r.user_id AS userId,
            r.reservation_time AS reservationTime,
            r.status AS status,
            s.row_number AS rowNumber,
            s.column_number AS columnNumber,
            s.seat_key AS seatKey,
            s.room_id AS roomId
        FROM rs_reservation r
        JOIN rs_seat s ON r.seat_id = s.seat_id
        WHERE r.user_id = #{userId}
        ORDER BY r.reservation_time
    </select>

    <!-- 특정 좌석 예약 상태 확인 -->
    <select id="getSeatReservationStatus" parameterType="map" resultType="kr.ac.kopo.vo.ReservationVO">
        SELECT 
            r.reservation_id AS reservationId,
            r.user_id AS userId,
            r.reservation_time AS reservationTime,
            r.status AS status
        FROM rs_reservation r
        WHERE r.seat_id = #{seatId}
        AND r.status = 'active'
    </select>

</mapper>
